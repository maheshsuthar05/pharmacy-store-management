{"version":3,"sources":["Components/managerLogin.js","Components/executiveLogin.js","Components/managerTopbar.js","Redux/actions.js","Components/medicines.js","Components/orders.js","Components/Medicines/addMedicine.js","Components/salesExecutive.js","Components/Medicines/editMedicine.js","Components/Medicines/viewMedicine.js","Components/Executives/addExecutive.js","Components/Executives/viewExecutive.js","Components/Executives/editExecutive.js","Components/Orders/invoice.js","Components/Orders/addOrder.js","Components/Orders/viewOrder.js","Components/manager.js","Components/executiveTopbar.js","Components/exeOrders.js","Components/Orders Executive/AddExeOrder.js","Components/Orders Executive/ViewExeOrder.js","Components/executive.js","Components/login.js","App.js","reportWebVitals.js","Redux/reducers.js","index.js"],"names":["ManagerLogin","props","submitForm","e","preventDefault","state","username","password","localStorage","setItem","setState","loggedIn","getItem","this","to","className","src","onSubmit","type","id","name","placeholder","onChange","target","value","on","Component","ExecutiveLogin","ManagerTopbar","upDateMedicine","payload","upDateExecutive","Medicines","onDeleteMedicine","deleteId","dataAfterDelete","medicinesData","filter","item","updateMedicine","style","marginLeft","marginBottom","width","scope","map","medicineName","price","stock","onClick","connect","store","medicines","dispatch","Orders","onDeleteOrders","orders","updateOrders","console","log","customerName","contact","totalPrice","upDateOrder","AddMedicine","onInputChange","onSubmitForm","addMedicine","history","push","medicineData","length","manufacturer","discount","maxWidth","required","min","max","s","addNewMedicine","SalesExecutive","onDeleteExecutive","executivesData","updateExecutive","firstName","lastName","exp","executives","EditMedicine","componentDidMount","medi","match","params","idParam","newData","Number","useHistory","idParams","useParams","viewMedi","JSON","parse","class","AddExecutive","addExecutive","dob","gender","addNewExecutive","viewExe","EditExecutive","exe","Invoice","orderCart","netPrice","medicine","qty","AddOrder","alert","addOrder","onSubmitCartForm","indexAt","pattern","addNewOrder","viewOrders","fontSize","fontWeight","index","Manager","logout","removeItem","path","component","ViewMedicine","ViewExecutive","ViewOrder","ExecutiveTopbar","ExeOrders","onDeleteExeOrders","exeOrders","updateExeOrders","upDateExeOrder","AddExeOrder","addExeOrder","addNewExeOrder","Executive","ViewExeOrder","Login","mLog","eLog","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","window","createStore","finalData","stringify","data","order","exeOrder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0769846d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './login.css';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass ManagerLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const token = localStorage.getItem('managerToken')\r\n\r\n        let loggedIn = true\r\n\r\n        if(token == null){\r\n            loggedIn = false\r\n        }\r\n        this.state = { \r\n            username: '',\r\n            password: '',\r\n            loggedIn\r\n         }\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        const {username, password} = this.state\r\n        if(username === 'test-admin' && password === 'test-admin'){\r\n            localStorage.setItem('managerToken','asdsdasaasdasda')\r\n            this.setState({loggedIn: true})\r\n        }\r\n    }\r\n\r\n    render() { \r\n        if(this.state.loggedIn){\r\n            return <Redirect to='/manager' />\r\n        }\r\n        return ( \r\n            <div>\r\n            <img className='background-img' \r\n                src='https://images.unsplash.com/photo-1587370560942-ad2a04eabb6d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80' />\r\n            <div className='card-wrapper'>\r\n                <h1 className='call-to-action'>Manager Login</h1>\r\n                <form onSubmit={this.submitForm}>\r\n                    <div className='field'>\r\n                        <label>Username</label><br />\r\n                        <i className='bx bx-user'></i>\r\n                        <input type='text'\r\n                            id='username'\r\n                            name='username'\r\n                            placeholder='type your username'\r\n                            onChange={(e) =>\r\n                                this.setState({username: e.target.value})\r\n                            }/>\r\n                    </div>\r\n\r\n                    <div className='field'>\r\n                        <label>Password</label><br />\r\n                        <i className='bx bx-lock-alt' ></i>\r\n                        <input type='password'\r\n                            id='pwd'\r\n                            name='pwd'\r\n                            placeholder='type your password' \r\n                            onChange={(e) =>\r\n                                this.setState({password: e.target.value})\r\n                            }/>\r\n                    </div>\r\n                    <a><span>Forgot password?</span></a>\r\n                    <input type='submit' id='login-button' value='LOGIN' on/>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ManagerLogin;","import React, { Component } from 'react';\r\nimport './login.css';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass ExecutiveLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const token = localStorage.getItem('executiveToken')\r\n\r\n        let loggedIn = true\r\n\r\n        if(token == null){\r\n            loggedIn = false\r\n        }\r\n        this.state = { \r\n            username: '',\r\n            password: '',\r\n            loggedIn\r\n         }\r\n    }\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        const {username, password} = this.state\r\n        if(username === 'test-sales' && password === 'test-sales'){\r\n            localStorage.setItem('executiveToken','asdsdadoawokda')\r\n            this.setState({loggedIn: true})\r\n        }\r\n    }\r\n\r\n    render() { \r\n        if(this.state.loggedIn){\r\n            return <Redirect to='/executive' />\r\n        }\r\n        return ( \r\n            <div>\r\n            <img className='background-img' \r\n                src='https://images.unsplash.com/photo-1587370560942-ad2a04eabb6d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80' />\r\n            <div className='card-wrapper'>\r\n                <h1 className='call-to-action'>Executive Login</h1>\r\n                <form onSubmit={this.submitForm}>\r\n                    <div className='field'>\r\n                        <label>Username</label><br />\r\n                        <i className='bx bx-user'></i>\r\n                        <input type='text'\r\n                            id='username'\r\n                            name='username'\r\n                            placeholder='type your username'\r\n                            onChange={(e) =>\r\n                                this.setState({username: e.target.value})\r\n                            }/>\r\n                    </div>\r\n\r\n                    <div className='field'>\r\n                        <label>Password</label><br />\r\n                        <i className='bx bx-lock-alt' ></i>\r\n                        <input type='password'\r\n                            id='pwd'\r\n                            name='pwd'\r\n                            placeholder='type your password' \r\n                            onChange={(e) =>\r\n                                this.setState({password: e.target.value})\r\n                            }/>\r\n                    </div>\r\n                    <a><span>Forgot password?</span></a>\r\n                    <input type='submit' id='login-button' value='LOGIN' on/>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ExecutiveLogin;","import React, { Component } from 'react';\r\nimport './managerTopbar.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ManagerTopbar = () => {\r\n    return (\r\n        <div className = 'topbar'>\r\n                <Link to='/manager/medicines'><button>Medicines</button></Link>\r\n                <Link to='/manager/orders'><button>Orders</button></Link>\r\n                <Link to='/manager/salesexecutive'><button>Sales Executive</button></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManagerTopbar;","export const addNewMedicine = (payload) => ({\r\n    type: 'ADD_MEDICINE',\r\n    payload\r\n})\r\n\r\nexport const upDateMedicine = (payload) => ({\r\n    type: 'UPDATE_MEDICINE',\r\n    payload\r\n})\r\n\r\nexport const addNewExecutive = (payload) => ({\r\n    type: 'ADD_EXECUTIVE',\r\n    payload\r\n})\r\n\r\nexport const upDateExecutive = (payload) => ({\r\n    type: 'UPDATE_EXECUTIVE',\r\n    payload\r\n})\r\n\r\nexport const addNewOrder = (payload) => ({\r\n    type: 'ADD_ORDER',\r\n    payload\r\n})\r\n\r\nexport const upDateOrder = (payload) => ({\r\n    type: 'UPDATE_ORDER',\r\n    payload\r\n})\r\n\r\nexport const addNewExeOrder = (payload) => ({\r\n    type: 'ADD_EXE_ORDER',\r\n    payload\r\n})\r\n\r\nexport const upDateExeOrder = (payload) => ({\r\n    type: 'UPDATE_EXE_ORDER',\r\n    payload\r\n})","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { upDateMedicine } from '../Redux/actions'\r\n\r\nclass Medicines extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    onDeleteMedicine = (deleteId) => {\r\n        const dataAfterDelete = this.props.medicinesData.filter((item) => (deleteId !== item.id))\r\n        this.props.updateMedicine(dataAfterDelete)\r\n    }\r\n    render() {\r\n        return (<>\r\n            <Link to='/manager/addMedicine'><button className='btn btn-primary' style={{marginLeft:'38%',marginBottom:'20px',width:'200px'}}>Add New Medicine</button></Link>\r\n            <table className=\"table border shadow\">\r\n                <thead className=\"thead-dark \">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Price</th>\r\n                        <th scope=\"col\">Stock</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.medicinesData !== null ? this.props.medicinesData.map((item) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{item.id}</th>\r\n                            <td>{item.medicineName}</td>\r\n                            <td>Rs.{item.price}</td>\r\n                            <td>{item.stock} nos.</td>\r\n                            <td>\r\n                                <Link className='btn btn-primary mr-2' to={`/manager/viewMedicine/${item.id}`}>View</Link>\r\n                                <Link className='btn btn-outline-primary mr-2' to={`/manager/editMedicine/${item.id}`}>Edit</Link>\r\n                                <Link className='btn btn-danger' onClick={() => {this.onDeleteMedicine(item.id)}}>Delete</Link>\r\n                            </td>\r\n                        </tr>\r\n                    )) : ''}\r\n                </tbody>\r\n            </table>\r\n        </>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    medicinesData: store.medicines\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateMedicine: (payload) => dispatch(upDateMedicine(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Medicines);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { upDateOrder } from '../Redux/actions'\r\n\r\nclass Orders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    onDeleteOrders = (deleteId) => {\r\n        const dataAfterDelete = this.props.orders.filter((item) => (deleteId !== item.id))\r\n        this.props.updateOrders(dataAfterDelete)\r\n    }\r\n    render() {\r\n        return (<>\r\n            <Link to='/manager/addOrder'><button className='btn btn-primary' style={{marginLeft:'38%',marginBottom:'20px',width:'200px'}}>Add New Order</button></Link>\r\n            <table className=\"table border shadow\">\r\n                <thead className=\"thead-dark \">\r\n                    <tr>\r\n                        <th scope=\"col\">OrderID</th>\r\n                        <th scope=\"col\">Customer Name</th>\r\n                        <th scope=\"col\">Contact Number</th>\r\n                        <th scope=\"col\">Total Price</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {console.log(this.props.orders)}\r\n                    {this.props.orders !== [] ? this.props.orders.map((item) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{item.id}</th>\r\n                            <td>{item.customerName}</td>\r\n                            <td>{item.contact}</td>\r\n                            <td>Rs. {item.totalPrice}</td>\r\n                            <td>\r\n                                <Link className='btn btn-primary mr-2' to={`/manager/viewOrder/${item.id}`}>View</Link>\r\n                                <Link className='btn btn-danger' onClick={() => {this.onDeleteOrders(item.id)}}>Delete</Link>\r\n                            </td>\r\n                        </tr>\r\n                    )) : ''}\r\n                </tbody>\r\n            </table>\r\n        </>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    orders: store.orders\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateOrders: (payload) => dispatch(upDateOrder(payload)),\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React, { Component } from 'react';\r\nimport { addNewMedicine } from '../../Redux/actions'\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddMedicine extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.medicineData.length === null ? 1 : this.props.medicineData.length + 1,\r\n            medicineName: '',\r\n            manufacturer: '',\r\n            price: '',\r\n            stock: '',\r\n            discount: ''\r\n        }\r\n    }\r\n\r\n    onInputChange = e => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmitForm = e => {\r\n        e.preventDefault();\r\n        this.props.addMedicine(this.state)\r\n        this.props.history.push('/manager/medicines')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card bg-light\">\r\n                <article className=\"card-body mx-auto\" style={{ maxWidth: '700px' }}>\r\n                    <form onSubmit={e => this.onSubmitForm(e)} style={{ maxWidth: '100%' }}>\r\n                        <div className=\"form-group input-group\" style={{ maxWidth: '100%' }}>\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-pills\"></i> </span>\r\n                            </div>\r\n                            <input name=\"medicineName\" className=\"form-control\" placeholder=\"Medicine name\" type=\"text\" required\r\n                                value={this.state.medicineName} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\" style={{ maxWidth: '100%' }}>\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-industry\"></i> </span>\r\n                            </div>\r\n                            <input name=\"manufacturer\" className=\"form-control\" placeholder=\"Manufacturer name\" type=\"text\" required\r\n                                value={this.state.manufacturer} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\" style={{ maxWidth: '100%' }}>\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-tag\"></i> </span>\r\n                            </div>\r\n                            <input name=\"price\" className=\"form-control\" placeholder=\"Enter the Price\" type=\"number\" min='0' required\r\n                                value={this.state.price} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\" style={{ maxWidth: '100%' }}>\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-cubes\"></i> </span>\r\n                            </div>\r\n                            <input name=\"stock\" className=\"form-control\" placeholder=\"Enter Stock available\" type=\"number\" min='0' required\r\n                                value={this.state.stock} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\" style={{ maxWidth: '100%' }}>\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-percent\"></i> </span>\r\n                            </div>\r\n                            <input name=\"discount\" className=\"form-control\" placeholder=\"Enter Discount\" type=\"number\" min='0' max='100'\r\n                                value={this.state.discount} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group\" style={{ maxWidth: '100%' }}s>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\"> Add Medicine  </button>\r\n                        </div>\r\n                    </form>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    medicineData: store.medicines,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addMedicine: (payload) => dispatch(addNewMedicine(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMedicine);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { upDateExecutive } from '../Redux/actions'\r\n\r\nclass SalesExecutive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    onDeleteExecutive = (deleteId) => {\r\n        const dataAfterDelete = this.props.executivesData.filter((item) => (deleteId !== item.id))\r\n        this.props.updateExecutive(dataAfterDelete)\r\n    }\r\n    render() {\r\n        return (<>\r\n            <Link to='/manager/addExecutive'><button className='btn btn-primary' style={{marginLeft:'38%',marginBottom:'20px',width:'200px'}}>Add New Executive</button></Link>\r\n            <table className=\"table border shadow\">\r\n                <thead className=\"thead-dark \">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">First Name</th>\r\n                        <th scope=\"col\">Last Name</th>\r\n                        <th scope=\"col\">Experience (in Yrs)</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.executivesData !== [] ? this.props.executivesData.map((item) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{item.id}</th>\r\n                            <td>{item.firstName}</td>\r\n                            <td>{item.lastName}</td>\r\n                            <td>{item.exp}</td>\r\n                            <td>\r\n                                <Link className='btn btn-primary mr-2' to={`/manager/viewExecutive/${item.id}`}>View</Link>\r\n                                <Link className='btn btn-outline-primary mr-2' to={`/manager/editExecutive/${item.id}`}>Edit</Link>\r\n                                <Link className='btn btn-danger' onClick={() => {this.onDeleteExecutive(item.id)}}>Delete</Link>\r\n                            </td>\r\n                        </tr>\r\n                    )) : ''}\r\n                </tbody>\r\n            </table>\r\n        </>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    executivesData: store.executives\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateExecutive: (payload) => dispatch(upDateExecutive(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SalesExecutive);","import React, { Component, useState, useEffect } from 'react';\r\nimport { upDateMedicine } from '../../Redux/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass EditMedicine extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: Number(this.props.match.params.idParam),\r\n            medicineName: '',\r\n            manufacturer: '',\r\n            price: '',\r\n            stock: '',\r\n            discount: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const medi = this.props.medicineData[this.props.match.params.idParam - 1]\r\n        this.setState({medicineName: medi.medicineName, manufacturer: medi.manufacturer,\r\n            price: medi.price, stock: medi.stock, discount: medi.discount})\r\n    }\r\n\r\n    onInputChange = e => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmitForm = e => {\r\n        e.preventDefault();\r\n        let newData = this.props.medicineData.filter((item)=>(item.id !== this.state.id))\r\n        newData.push(this.state)\r\n        this.props.updateMedicine(newData)\r\n        this.props.history.push('/manager/medicines')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card bg-light\">\r\n                <article className=\"card-body mx-auto\" style={{ maxWidth: '400px' }}>\r\n                    <form onSubmit={e => this.onSubmitForm(e)}>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-pills\"></i> </span>\r\n                            </div>\r\n                            <input name=\"medicineName\" className=\"form-control\" placeholder=\"Medicine name\" type=\"text\" required\r\n                                value={this.state.medicineName} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-industry\"></i> </span>\r\n                            </div>\r\n                            <input name=\"manufacturer\" className=\"form-control\" placeholder=\"Manufacturer name\" type=\"text\" required\r\n                                value={this.state.manufacturer} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-tag\"></i> </span>\r\n                            </div>\r\n                            <input name=\"price\" className=\"form-control\" placeholder=\"Enter the Price\" type=\"number\" min='0' required\r\n                                value={this.state.price} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-cubes\"></i> </span>\r\n                            </div>\r\n                            <input name=\"stock\" className=\"form-control\" placeholder=\"Enter Stock available\" type=\"number\" min='0' required\r\n                                value={this.state.stock} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-percent\"></i> </span>\r\n                            </div>\r\n                            <input name=\"discount\" className=\"form-control\" placeholder=\"Enter Discount\" type=\"number\" min='0' max='100'\r\n                                value={this.state.discount} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\"> Add Medicine  </button>\r\n                        </div>\r\n                    </form>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    medicineData: store.medicines,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateMedicine: (payload) => dispatch(upDateMedicine(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditMedicine);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nconst ViewMedicine = ({medicinesData}) => {\r\n    let history = useHistory();\r\n    const { idParams } = useParams();\r\n\r\n    let viewMedi = JSON.parse(localStorage.getItem('medicines')).filter(item => item.id == idParams)[0]\r\n\r\n    return (\r\n        <table class=\"table border shadow\">\r\n            <thead class=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Description</th>\r\n                    <th scope=\"col\">Medicine Details</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">Medicine ID</th>\r\n                    <td>{viewMedi.id}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Medicine Name</th>\r\n                    <td>{viewMedi.medicineName}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Manufacture Name</th>\r\n                    <td>{viewMedi.manufacturer}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Price</th>\r\n                    <td>Rs. {viewMedi.price}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Stock</th>\r\n                    <td>{viewMedi.stock} nos.</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Discount</th>\r\n                    <td>{viewMedi.discount}%</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        );\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    medicinesData: store.medicines\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(ViewMedicine);","import React, { Component } from 'react';\r\nimport { addNewExecutive } from '../../Redux/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass AddExecutive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.executivesData.length === null ? 1 : this.props.executivesData.length + 1,\r\n            firstName: '',\r\n            lastName: '',\r\n            dob: '',\r\n            gender: '',\r\n            exp: ''\r\n        }\r\n    }\r\n\r\n    onInputChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmitForm = e => {\r\n        e.preventDefault();\r\n        this.props.addExecutive(this.state)\r\n        this.props.history.push('/manager/salesexecutive')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card bg-light\">\r\n                <article className=\"card-body mx-auto\" style={{ maxWidth: '400px' }}>\r\n                    <form onSubmit={e => this.onSubmitForm(e)}>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n                            </div>\r\n                            <input name=\"firstName\" className=\"form-control\" placeholder=\"Enter First Name\" type=\"text\" required\r\n                                value={this.state.firstName} onChange={e => this.onInputChange(e)} />\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n                            </div>\r\n                            <input name=\"lastName\" className=\"form-control\" placeholder=\"Enter Last Name\" type=\"text\" required\r\n                                value={this.state.lastName} onChange={e => this.onInputChange(e)} />\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-table\"></i> </span>\r\n                            </div>\r\n                            <input name=\"dob\" type='date' className=\"form-control\" placeholder=\"Enter Date of Birth\" required\r\n                                value={this.state.dob} onChange={e => this.onInputChange(e)} />\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\" style={{ width: '100%' }}>\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n                                <select name='gender' onChange={e => this.onInputChange(e)} required style={{ width: '100%' }} className=\"form-control\">\r\n                                    <option value=''>Select Gender</option>\r\n                                    <option value='Male'>Male</option>\r\n                                    <option value='Female'>Female</option>\r\n                                </select>\r\n                            </div>\r\n                            {/* <input name=\"gender\" className=\"form-control\" placeholder=\"Enter Gender\" required\r\n                                value={this.state.gender} onChange={e => this.onInputChange(e)}/> */}\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-clock\"></i> </span>\r\n                            </div>\r\n                            <input name=\"exp\" className=\"form-control\" placeholder=\"Enter Experience in years\" type=\"number\" min='0' max='100' required\r\n                                value={this.state.exp} onChange={e => this.onInputChange(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\"> Add Executive  </button>\r\n                        </div>\r\n                    </form>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    executivesData: store.executives,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addExecutive: (payload) => dispatch(addNewExecutive(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExecutive);\r\n\r\n// import React, { Component } from 'react';\r\n// import { addNewExecutive } from '../../Redux/actions'\r\n// import { connect } from 'react-redux'\r\n\r\n// class AddExecutive extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             id: this.props.executivesData.length === null ? 1 : this.props.executivesData.length + 1,\r\n//             firstName: '',\r\n//             lastName: '',\r\n//             dob: '',\r\n//             gender: '',\r\n//             exp: ''\r\n//         }\r\n//     }\r\n\r\n//     onInputChange = e => {\r\n//         this.setState({[e.target.name]: e.target.value})\r\n//     }\r\n\r\n//     onSubmitForm = e => {\r\n//         e.preventDefault();\r\n//         this.props.addExecutive(this.state)\r\n//         this.props.history.push('/manager/salesexecutive')\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"card bg-light\">\r\n//                 <article className=\"card-body mx-auto\" style={{ maxWidth: '400px' }}>\r\n//                     <form onSubmit={e => this.onSubmitForm(e)}>\r\n//                         <div className=\"form-group input-group\">\r\n//                             <div className=\"input-group-prepend\">\r\n//                                 <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n//                             </div>\r\n//                             <input name=\"firstName\" className=\"form-control\" placeholder=\"Enter First Name\" type=\"text\" required\r\n//                                 value={this.state.firstName} onChange={e => this.onInputChange(e)}/>\r\n//                         </div>\r\n//                         <div className=\"form-group input-group\">\r\n//                             <div className=\"input-group-prepend\">\r\n//                                 <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n//                             </div>\r\n//                             <input name=\"lastName\" className=\"form-control\" placeholder=\"Enter Last Name\" type=\"text\" required\r\n//                                 value={this.state.lastName} onChange={e => this.onInputChange(e)}/>\r\n//                         </div>\r\n//                         <div className=\"form-group input-group\">\r\n//                             <div className=\"input-group-prepend\">\r\n//                                 <span className=\"input-group-text\"> <i className=\"fas fa-table\"></i> </span>\r\n//                             </div>\r\n//                             <input name=\"dob\" className=\"form-control\" placeholder=\"Enter Date of Birth\" required\r\n//                                 value={this.state.dob} onChange={e => this.onInputChange(e)}/>\r\n//                         </div>\r\n//                         <div className=\"form-group input-group\">\r\n//                             <div className=\"input-group-prepend\">\r\n//                                 <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n//                             </div>\r\n//                             <input name=\"gender\" className=\"form-control\" placeholder=\"Enter Gender\" required\r\n//                                 value={this.state.gender} onChange={e => this.onInputChange(e)}/>\r\n//                         </div>\r\n//                         <div className=\"form-group input-group\">\r\n//                             <div className=\"input-group-prepend\">\r\n//                                 <span className=\"input-group-text\"> <i className=\"fas fa-clock\"></i> </span>\r\n//                             </div>\r\n//                             <input name=\"exp\" className=\"form-control\" placeholder=\"Enter Experience in years\" type=\"number\" min='0' max='100' required\r\n//                                 value={this.state.exp} onChange={e => this.onInputChange(e)}/>\r\n//                         </div>\r\n//                         <div className=\"form-group\">\r\n//                             <button type=\"submit\" className=\"btn btn-primary btn-block\"> Add Executive  </button>\r\n//                         </div>\r\n//                     </form>\r\n//                 </article>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = (store) => ({\r\n//     executivesData: store.executives,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//     addExecutive: (payload) => dispatch(addNewExecutive(payload)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(AddExecutive);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nconst ViewExecutive = ({executivesData}) => {\r\n    let history = useHistory();\r\n    const { idParams } = useParams();\r\n\r\n    let viewExe = JSON.parse(localStorage.getItem('executives')).filter(item => item.id == idParams)[0]\r\n\r\n    return (\r\n        <table class=\"table border shadow\">\r\n            <thead class=\"thead-light\">\r\n                <tr>\r\n                    <th scope=\"col\">Description</th>\r\n                    <th scope=\"col\">Executive Details</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">FirstName</th>\r\n                    <td>{viewExe.firstName}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Last Name</th>\r\n                    <td>{viewExe.lastName}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Date of Birth</th>\r\n                    <td>{viewExe.dob}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Gender</th>\r\n                    <td>{viewExe.gender}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Experience (in Yrs.)</th>\r\n                    <td>{viewExe.exp} nos.</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        );\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    executivesData: store.executives\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(ViewExecutive);","import React, { Component, useState, useEffect } from 'react';\r\nimport { upDateExecutive } from '../../Redux/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass EditExecutive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: Number(this.props.match.params.idParam),\r\n            firstName: '',\r\n            lastName: '',\r\n            dob: '',\r\n            gender: '',\r\n            exp: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const exe = this.props.executivesData[this.props.match.params.idParam - 1]\r\n        this.setState({firstName: exe.firstName, lastName: exe.lastName,\r\n            dob: exe.dob, gender: exe.gender, exp: exe.exp})\r\n    }\r\n\r\n    onInputChange = e => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmitForm = e => {\r\n        e.preventDefault();\r\n        let newData = this.props.executivesData.filter((item)=>(item.id !== this.state.id))\r\n        newData.push(this.state)\r\n        this.props.updateExecutive(newData)\r\n        this.props.history.push('/manager/salesexecutive')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card bg-light\">\r\n                <article className=\"card-body mx-auto\" style={{ maxWidth: '400px' }}>\r\n                    <form onSubmit={e => this.onSubmitForm(e)}>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n                            </div>\r\n                            <input name=\"firstName\" className=\"form-control\" placeholder=\"Enter First Name\" type=\"text\" required\r\n                                value={this.state.firstName} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n                            </div>\r\n                            <input name=\"lastName\" className=\"form-control\" placeholder=\"Enter Last Name\" type=\"text\" required\r\n                                value={this.state.lastName} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-table\"></i> </span>\r\n                            </div>\r\n                            <input name=\"dob\" type='date' className=\"form-control\" placeholder=\"Enter Date of Birth\" required\r\n                                value={this.state.dob} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n                            </div>\r\n                            <input name=\"gender\" className=\"form-control\" placeholder=\"Enter Gender\" required\r\n                                value={this.state.gender} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-clock\"></i> </span>\r\n                            </div>\r\n                            <input name=\"exp\" className=\"form-control\" placeholder=\"Enter Experience in years\" type=\"number\" min='0' max='100' required\r\n                                value={this.state.exp} onChange={e => this.onInputChange(e)}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\"> Update Executive </button>\r\n                        </div>\r\n                    </form>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    executivesData: store.executives,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateExecutive: (payload) => dispatch(upDateExecutive(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExecutive);","import React from 'react';\r\n\r\nconst Invoice = ({ orderCart }) => {\r\n\r\n    let price = 0;\r\n    orderCart.map((item) => price += item.netPrice);\r\n    console.log(price)\r\n\r\n\r\n    return (\r\n        <table className=\"table border shadow\">\r\n            <thead className=\"thead-dark \">\r\n                <tr>\r\n                    <th scope=\"col\">Medicine Name</th>\r\n                    <th scope=\"col\">Quantity</th>\r\n                    <th scope=\"col\">Total Price</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {orderCart.map((item) =>{\r\n                    return(\r\n                        <tr>\r\n                            <td>{item.medicine}</td>\r\n                            <td>{item.qty} nos.</td>\r\n                            <td>Rs.{item.netPrice}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                <tr>\r\n                    <td></td>\r\n                    <th>Total Price</th>\r\n                    <td>Rs.{price}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Invoice;","import React, { Component } from 'react';\r\nimport { addNewOrder } from '../../Redux/actions'\r\nimport { connect } from 'react-redux';\r\nimport Invoice from './invoice';\r\n\r\nclass AddOrder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.orders.length === [] ? 1 : this.props.orders.length + 1,\r\n            customerName: '',\r\n            contact: '',\r\n            orderCart: [],\r\n            medicine: '',\r\n            qty: '',\r\n            totalPrice: 0\r\n        }\r\n    }\r\n\r\n    onInputChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmitForm = e => {\r\n        e.preventDefault();\r\n        if (this.state.orderCart.length === 0) {\r\n            alert('Please add Medicines to create order')\r\n        } else {\r\n            this.state.orderCart.map((item) => this.state.totalPrice += item.netPrice);\r\n            console.log(this.state)\r\n            const {id, customerName, contact, orderCart, totalPrice} = this.state;\r\n            this.props.addOrder({id,customerName,contact,orderCart,totalPrice});\r\n            this.props.history.push('/manager/orders');\r\n        }\r\n    }\r\n\r\n    onSubmitCartForm = e => {\r\n        e.preventDefault();\r\n        const indexAt = this.props.medicines.filter((item) => item.medicineName === this.state.medicine)\r\n        const netPrice = this.state.qty * indexAt[0].price;\r\n        this.setState({ orderCart: [...this.state.orderCart, { medicine: this.state.medicine, qty: this.state.qty, netPrice: netPrice }], qty: '' })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card bg-light d-flex flex-column\">\r\n                <article className=\"card-body\" style={{ maxWidth: '100%' }}>\r\n                    <form onSubmit={e => this.onSubmitForm(e)} class='d-flex flex-row'>\r\n                        <div className=\"form-group input-group mx-5\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n                            </div>\r\n                            <input name=\"customerName\" className=\"form-control\" placeholder=\"Enter Customer Name\" type=\"text\" required\r\n                                value={this.state.customerName} onChange={e => this.onInputChange(e)} />\r\n                        </div>\r\n                        <div className=\"form-group input-group mr-5\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> +91 </span>\r\n                            </div>\r\n                            <input name=\"contact\" className=\"form-control\" placeholder=\"Enter 10-digit Contact Number\" type='tel' pattern=\"[0-9]{10}\" required\r\n                                value={this.state.contact} onChange={e => this.onInputChange(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-danger btn-block\" style={{ width: '200px' }}> Create Order  </button>\r\n                        </div>\r\n                    </form>\r\n                </article>\r\n                <article className=\"card-body d-flex flex-row\" style={{ maxWidth: '100%' }}>\r\n                    <div style={{ width: '50%' }}>\r\n                        <form onSubmit={e => this.onSubmitCartForm(e)} style={{ maxWidth: '60%' }} className='mx-auto'>\r\n                            <div className=\"form-group input-group\" style={{ width: '100%' }}>\r\n                                <div className=\"input-group-prepend\" style={{ width: '100%' }}>\r\n                                    <span className=\"input-group-text\"> <i className=\"fas fa-pills\"></i> </span>\r\n                                    <select name='medicine' onChange={this.onInputChange} required style={{ width: '100%' }}>\r\n                                        <option value=\"\" >Select Medicine</option>\r\n                                        {this.props.medicines.map((item) => (\r\n                                            <option value={item.medicineName}>{item.medicineName} - {item.stock} nos.</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group input-group\" style={{ width: '100%' }}>\r\n                                <div className=\"input-group-prepend\" style={{ width: '100%' }}>\r\n                                    <span className=\"input-group-text\"> <i className=\"fas fa-pills\"></i> </span>\r\n                                    <input name=\"qty\" style={{ width: '100%' }} className=\"form-control\" placeholder=\"Enter Quantity\" type=\"number\" min='0' required\r\n                                        value={this.state.qty} onChange={e => this.onInputChange(e)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\"> Add Medicine  </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div style={{ width: '50%' }}>\r\n                        <h3  style={{ width: '50%' }} className='mx-auto'>Customer Invoice</h3>\r\n                        {this.state.orderCart.length !== 0 ? <Invoice orderCart={this.state.orderCart} /> : ''}\r\n                    </div>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    orders: store.orders,\r\n    medicines: store.medicines\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addOrder: (payload) => dispatch(addNewOrder(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrder);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nconst ViewOrder = ({ medicinesData }) => {\r\n    let history = useHistory();\r\n    const { idParams } = useParams();\r\n\r\n    let viewOrders = JSON.parse(localStorage.getItem('orders')).filter(item => item.id == idParams)[0]\r\n\r\n    return (\r\n        <div>\r\n            <div className='d-flex flex-row justify-content-around mb-3' style={{maxWidth:'100%',fontSize:'24px'}}>\r\n                <div>\r\n                    <span style={{fontWeight:'600'}}>Customer Name - </span>\r\n                    <span>{viewOrders.customerName}</span>\r\n                </div>\r\n                <div>\r\n                    <span style={{fontWeight:'600'}}>Contact Number - </span>\r\n                    <span>{viewOrders.contact}</span>\r\n                </div>\r\n            </div>\r\n            <table class=\"table border shadow\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Medicine</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        <th scope=\"col\">Net Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {viewOrders.orderCart.map((item, index) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{viewOrders.orderCart[index].medicine}</td>\r\n                                <td>{viewOrders.orderCart[index].qty} nos.</td>\r\n                                <td>Rs.{viewOrders.orderCart[index].netPrice}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    <tr>\r\n                        <td></td>\r\n                        <th>Total Price</th>\r\n                        <th>Rs.{viewOrders.totalPrice}</th>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    medicinesData: store.medicines\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(ViewOrder);","import React, { Component } from 'react';\r\nimport { Redirect, Link, BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport ManagerTopbar from './managerTopbar';\r\nimport Medicines from './medicines';\r\nimport Orders from './orders';\r\nimport AddMedicine from './Medicines/addMedicine';\r\nimport './manager.css'\r\nimport SalesExecutive from './salesExecutive';\r\nimport EditMedicine from './Medicines/editMedicine';\r\nimport ViewMedicine from './Medicines/viewMedicine';\r\nimport AddExecutive from './Executives/addExecutive';\r\nimport ViewExecutive from './Executives/viewExecutive';\r\nimport EditExecutive from './Executives/editExecutive';\r\nimport AddOrder from './Orders/addOrder';\r\nimport ViewOrder from './Orders/viewOrder';\r\n\r\nclass Manager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const token = localStorage.getItem('managerToken')\r\n\r\n        let loggedIn = true\r\n\r\n        if (token == null) {\r\n            loggedIn = false\r\n        }\r\n        this.state = {\r\n            loggedIn\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('managerToken');\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loggedIn === false) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (<div className='manager-home'>\r\n            <BrowserRouter>\r\n                <div className='left-col'>\r\n                    <ManagerTopbar />\r\n                </div>\r\n                <div className='right-col'>\r\n                    <div className='header'>\r\n                        <h1>Hello Manager</h1>\r\n                        <button onClick={this.logout} className='btn btn-outline-danger'>Logout</button>\r\n                    </div>\r\n                    <div className='manager-section'>\r\n                        <Switch>\r\n                            <Route path='/manager/medicines' component={Medicines} />\r\n                            <Route path='/manager/orders' component={Orders} />\r\n                            <Route path='/manager/salesexecutive' component={SalesExecutive} />\r\n\r\n                            <Route path='/manager/addMedicine' component={AddMedicine} />\r\n                            <Route path='/manager/editMedicine/:idParam' component={EditMedicine} />\r\n                            <Route path='/manager/viewMedicine/:idParams' component={ViewMedicine} />\r\n\r\n                            <Route path='/manager/addExecutive' component={AddExecutive} />\r\n                            <Route path='/manager/editExecutive/:idParam' component={EditExecutive} />\r\n                            <Route path='/manager/viewExecutive/:idParams' component={ViewExecutive} />\r\n\r\n                            <Route path='/manager/addOrder' component={AddOrder} />\r\n                            <Route path='/manager/viewOrder/:idParams' component={ViewOrder} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Manager;","import React, { Component } from 'react';\r\nimport './managerTopbar.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ExecutiveTopbar = () => {\r\n    return (\r\n        <div className = 'topbar'>\r\n                <Link to='/executive/orders'><button>Orders</button></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExecutiveTopbar;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { upDateExeOrder } from '../Redux/actions'\r\n\r\nclass ExeOrders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    onDeleteExeOrders = (deleteId) => {\r\n        const dataAfterDelete = this.props.exeOrders.filter((item) => (deleteId !== item.id))\r\n        this.props.updateExeOrders(dataAfterDelete)\r\n    }\r\n    render() {\r\n        return (<>\r\n            <Link to='/executive/addExeOrder'><button className='btn btn-primary' style={{marginLeft:'38%',marginBottom:'20px',width:'200px'}}>Add New Order</button></Link>\r\n            <table className=\"table border shadow\">\r\n                <thead className=\"thead-dark \">\r\n                    <tr>\r\n                        <th scope=\"col\">OrderID</th>\r\n                        <th scope=\"col\">Customer Name</th>\r\n                        <th scope=\"col\">Contact Number</th>\r\n                        <th scope=\"col\">Total Price</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.exeOrders !== [] ? this.props.exeOrders.map((item) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{item.id}</th>\r\n                            <td>{item.customerName}</td>\r\n                            <td>{item.contact}</td>\r\n                            <td>Rs. {item.totalPrice}</td>\r\n                            <td>\r\n                                <Link className='btn btn-primary mr-2' to={`/executive/viewExeOrder/${item.id}`}>View</Link>\r\n                                <Link className='btn btn-danger' onClick={() => {this.onDeleteExeOrders(item.id)}}>Delete</Link>\r\n                            </td>\r\n                        </tr>\r\n                    )) : ''}\r\n                </tbody>\r\n            </table>\r\n        </>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    exeOrders: store.exeOrders\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateExeOrders: (payload) => dispatch(upDateExeOrder(payload)),\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExeOrders);","import React, { Component } from 'react';\r\nimport { addNewExeOrder } from '../../Redux/actions'\r\nimport { connect } from 'react-redux';\r\nimport ExeInvoice from './exeInvoice'\r\n\r\nclass AddExeOrder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.exeOrders.length === [] ? 1 : this.props.exeOrders.length + 1,\r\n            customerName: '',\r\n            contact: '',\r\n            orderCart: [],\r\n            medicine: '',\r\n            qty: '',\r\n            totalPrice: 0\r\n        }\r\n    }\r\n\r\n    onInputChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmitForm = e => {\r\n        e.preventDefault();\r\n        if (this.state.orderCart.length === 0) {\r\n            alert('Please add Medicines to create order')\r\n        } else {\r\n            this.state.orderCart.map((item) => this.state.totalPrice += item.netPrice);\r\n            const {id, customerName, contact, orderCart, totalPrice} = this.state;\r\n            this.props.addExeOrder({id,customerName,contact,orderCart,totalPrice});\r\n            this.props.history.push('/executive/orders');\r\n        }\r\n    }\r\n\r\n    onSubmitCartForm = e => {\r\n        e.preventDefault();\r\n        const indexAt = this.props.medicines.filter((item) => item.medicineName === this.state.medicine)\r\n        const netPrice = this.state.qty * indexAt[0].price;\r\n        console.log(this.state)\r\n        this.setState({ orderCart: [...this.state.orderCart, { medicine: this.state.medicine, qty: this.state.qty, netPrice: netPrice }], qty: '' })\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card bg-light d-flex flex-column\">\r\n                <article className=\"card-body\" style={{ maxWidth: '100%' }}>\r\n                    <form onSubmit={e => this.onSubmitForm(e)} class='d-flex flex-row'>\r\n                        <div className=\"form-group input-group mx-5\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> <i className=\"fas fa-users\"></i> </span>\r\n                            </div>\r\n                            <input name=\"customerName\" className=\"form-control\" placeholder=\"Enter Customer Name\" type=\"text\" required\r\n                                value={this.state.customerName} onChange={e => this.onInputChange(e)} />\r\n                        </div>\r\n                        <div className=\"form-group input-group mr-5\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\"> +91 </span>\r\n                            </div>\r\n                            <input name=\"contact\" className=\"form-control\" placeholder=\"Enter 10-digit Contact Number\" type='tel' pattern=\"[0-9]{10}\" required\r\n                                value={this.state.contact} onChange={e => this.onInputChange(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-danger btn-block\" style={{ width: '200px' }}> Create Order  </button>\r\n                        </div>\r\n                    </form>\r\n                </article>\r\n                <article className=\"card-body d-flex flex-row\" style={{ maxWidth: '100%' }}>\r\n                    <div style={{ width: '50%' }}>\r\n                        <form onSubmit={e => this.onSubmitCartForm(e)} style={{ maxWidth: '60%' }} className='mx-auto'>\r\n                            <div className=\"form-group input-group\" style={{ width: '100%' }}>\r\n                                <div className=\"input-group-prepend\" style={{ width: '100%' }}>\r\n                                    <span className=\"input-group-text\"> <i className=\"fas fa-pills\"></i> </span>\r\n                                    <select name='medicine' onChange={this.onInputChange} required style={{ width: '100%' }}>\r\n                                        <option value=\"\" >Select Medicine</option>\r\n                                        {this.props.medicines.map((item) => (\r\n                                            <option value={item.medicineName}>{item.medicineName} - {item.stock} nos.</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group input-group\" style={{ width: '100%' }}>\r\n                                <div className=\"input-group-prepend\" style={{ width: '100%' }}>\r\n                                    <span className=\"input-group-text\"> <i className=\"fas fa-pills\"></i> </span>\r\n                                    <input name=\"qty\" style={{ width: '100%' }} className=\"form-control\" placeholder=\"Enter Quantity\" type=\"number\" min='0' required\r\n                                        value={this.state.qty} onChange={e => this.onInputChange(e)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\"> Add Medicine  </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div style={{ width: '50%' }}>\r\n                        <h3  style={{ width: '50%' }} className='mx-auto'>Customer Invoice</h3>\r\n                        {this.state.orderCart.length !== 0 ? <ExeInvoice orderCart={this.state.orderCart} /> : ''}\r\n                    </div>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    exeOrders: store.exeOrders,\r\n    medicines: store.medicines\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addExeOrder: (payload) => dispatch(addNewExeOrder(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExeOrder);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nconst ViewExeOrder = ({ medicinesData }) => {\r\n    let history = useHistory();\r\n    const { idParams } = useParams();\r\n\r\n    let viewOrders = JSON.parse(localStorage.getItem('exeOrders')).filter(item => item.id == idParams)[0]\r\n\r\n    return (\r\n        <div>\r\n            <div className='d-flex flex-row justify-content-around mb-3' style={{maxWidth:'100%',fontSize:'24px'}}>\r\n                <div>\r\n                    <span style={{fontWeight:'600'}}>Customer Name - </span>\r\n                    <span>{viewOrders.customerName}</span>\r\n                </div>\r\n                <div>\r\n                    <span style={{fontWeight:'600'}}>Contact Number - </span>\r\n                    <span>{viewOrders.contact}</span>\r\n                </div>\r\n            </div>\r\n            <table class=\"table border shadow\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Medicine</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        <th scope=\"col\">Net Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {viewOrders.orderCart.map((item, index) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{viewOrders.orderCart[index].medicine}</td>\r\n                                <td>{viewOrders.orderCart[index].qty} nos.</td>\r\n                                <td>Rs.{viewOrders.orderCart[index].netPrice}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    <tr>\r\n                        <td></td>\r\n                        <th>Total Price</th>\r\n                        <th>Rs.{viewOrders.totalPrice}</th>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    exeOrders: store.exeOrders\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(ViewExeOrder);","import React, { Component } from 'react';\r\nimport { Redirect, Link, BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport ExecutiveTopbar from './executiveTopbar';\r\nimport ExeOrders from './exeOrders';\r\nimport './manager.css'\r\nimport AddExeOrder from './Orders Executive/AddExeOrder'\r\nimport ViewExeOrder from './Orders Executive/ViewExeOrder'\r\n\r\nclass Executive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const token = localStorage.getItem('executiveToken')\r\n\r\n        let loggedIn = true\r\n\r\n        if (token == null) {\r\n            loggedIn = false\r\n        }\r\n        this.state = {\r\n            loggedIn\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('executiveToken');\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loggedIn === false) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (<div className='manager-home'>\r\n            <BrowserRouter>\r\n                <div className='left-col'>\r\n                    <ExecutiveTopbar />\r\n                </div>\r\n                <div className='right-col'>\r\n                    <div className='header'>\r\n                        <h1>Hello Executive</h1>\r\n                        <button onClick={this.logout} className='btn btn-outline-danger'>Logout</button>\r\n                    </div>\r\n                    <div className='manager-section'>\r\n                        <Switch>\r\n                            <Route path='/executive/orders' component={ExeOrders} />\r\n                            <Route path='/executive/addExeOrder' component={AddExeOrder} />\r\n                            <Route path='/executive/viewOrder/:idParams' component={ViewExeOrder} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Executive;","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport './login.css'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let mLog, eLog = false;\r\n        const mToken = localStorage.getItem('managerToken')\r\n        if (mToken == null) {\r\n            const eToken = localStorage.getItem('executiveToken')\r\n            if (eToken !== null) {\r\n                eLog = true;\r\n            }\r\n        } else {\r\n            mLog = true;\r\n        }\r\n\r\n        this.state = {\r\n            mLog, eLog\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.mLog) {\r\n            return <Redirect to='/manager' />\r\n        }\r\n        if (this.state.eLog) {\r\n            return <Redirect to='/executive' />\r\n        }\r\n        return (<div className='main-bg'>\r\n            <Link to='/managerLogin'><button>Manager Login</button></Link>\r\n            <Link to='/executiveLogin'><button>Executive Login</button></Link>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Login;","import './App.css';\nimport ManagerLogin from './Components/managerLogin'\nimport ExecutiveLogin from './Components/executiveLogin';\nimport Manager from './Components/manager'\nimport Executive from './Components/executive';\nimport Login from './Components/login';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' exact component={Login} />\n        <Route path='/managerLogin' component={ManagerLogin} />\n        <Route path='/executiveLogin' component={ExecutiveLogin} />\n        <Route path='/manager' component={Manager} />\n        <Route path='/executive' component={Executive} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    medicines: window.localStorage.getItem(\"medicines\") === null ? [] : JSON.parse(window.localStorage.getItem(\"medicines\")),\r\n    executives: window.localStorage.getItem(\"executives\") === null ? [] : JSON.parse(window.localStorage.getItem(\"executives\")),\r\n    orders: window.localStorage.getItem(\"orders\") === null ? [] : JSON.parse(window.localStorage.getItem(\"orders\")),\r\n    exeOrders: window.localStorage.getItem(\"exeOrders\") === null ? [] : JSON.parse(window.localStorage.getItem(\"exeOrders\"))\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n        case 'ADD_MEDICINE':\r\n            const finalData = [...state.medicines, payload];\r\n            window.localStorage.setItem(\"medicines\", JSON.stringify(finalData));\r\n            return { ...state, medicines: finalData }\r\n\r\n        case 'UPDATE_MEDICINE':\r\n            window.localStorage.setItem(\"medicines\", JSON.stringify(payload));\r\n            return { ...state, medicines: payload }\r\n\r\n        case 'ADD_EXECUTIVE':\r\n            const data = [...state.executives, payload];\r\n            window.localStorage.setItem(\"executives\", JSON.stringify(data));\r\n            return { ...state, executives: data }\r\n\r\n        case 'UPDATE_EXECUTIVE':\r\n            window.localStorage.setItem(\"executives\", JSON.stringify(payload));\r\n            return { ...state, executives: payload }\r\n\r\n        case 'ADD_ORDER':\r\n            const order = [...state.orders, payload];\r\n            window.localStorage.setItem(\"orders\", JSON.stringify(order));\r\n            return { ...state, orders: order }\r\n\r\n        case 'UPDATE_ORDER':\r\n            window.localStorage.setItem(\"orders\", JSON.stringify(payload));\r\n            return { ...state, orders: payload }\r\n\r\n        case 'ADD_EXE_ORDER':\r\n            const exeOrder = [...state.exeOrders, payload];\r\n            window.localStorage.setItem(\"exeOrders\", JSON.stringify(exeOrder));\r\n            return { ...state, exeOrders: exeOrder }\r\n\r\n        case 'UPDATE_EXE_ORDER':\r\n            window.localStorage.setItem(\"exeOrders\", JSON.stringify(payload));\r\n            return { ...state, exeOrders: payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './Redux/reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}